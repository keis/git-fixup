#!/bin/bash
# git-fixup (https://github.com/keis/git-fixup)

SUBDIRECTORY_OK=yes
. "$(git --exec-path)/git-sh-setup"

grok_diff='s:^--- \(a/\)*\(.*\):--- \2:p ;
           s/^@@ -\([0-9]*\) +\([0-9]*\).*/\1 \2/p'

function fixup_candidates_lines () {
    git diff --cached -U0 --no-prefix | sed -n "$grok_diff" | (
        file=''
        while read offs len; do
            if test "$offs" == '---'; then
                file="$len"
            else
                if test "$len" != '0'; then
                    if test "$file" != '/dev/null'; then
                        git blame -sl -L "$offs,+`expr $len - $offs | expr 1`" HEAD -- "$file"
                    fi
                fi
            fi
        done
    ) | grep -v "^^" | cut -d' ' -f 1 | sed 's/^/L /g'
}

function fixup_candidates_files () {
    git diff --cached --name-only | (
        while read file; do
            git rev-list -n 1 $rev_range -- $file
        done
    ) | sed 's/^/F /g'
}

function print_sha () {
    local sha=$1
    local type=$2
    printf "%s %s " "$sha" "$type"
    git cat-file -p "$sha" | sed -n '/^committer/ {s/.*<\(.*\)>.*/<\1>/ ; h} ;
                                     /^$/         {n ; G ; s/\n/ / ; p ; q}'
}

if test $# -eq 1; then
    git rev-parse --verify "$1" > /dev/null || exit 1
    git commit -m "fixup! $1";
    exit 0
fi

if git diff --cached --quiet; then
    echo 'No staged changes. Use git add -p to add them.'
    exit 1
fi

cd_to_toplevel
rev_range=`git rev-parse @{upstream} 2>/dev/null`
if test "$?" != 0; then
    rev_range="HEAD"
else
    rev_range="${rev_range}...HEAD"
fi

(
    fixup_candidates_lines
    fixup_candidates_files
) | sort -uk2 |  while read type sha; do
    if test "$sha" != ""; then
        print_sha $sha "[$type]"
    fi
done
